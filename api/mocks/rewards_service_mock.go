// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/data-node/api (interfaces: RewardsService)

// Package mocks is a generated GoMock package.
package mocks

import (
	vega "code.vegaprotocol.io/protos/vega"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRewardsService is a mock of RewardsService interface
type MockRewardsService struct {
	ctrl     *gomock.Controller
	recorder *MockRewardsServiceMockRecorder
}

// MockRewardsServiceMockRecorder is the mock recorder for MockRewardsService
type MockRewardsServiceMockRecorder struct {
	mock *MockRewardsService
}

// NewMockRewardsService creates a new mock instance
func NewMockRewardsService(ctrl *gomock.Controller) *MockRewardsService {
	mock := &MockRewardsService{ctrl: ctrl}
	mock.recorder = &MockRewardsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRewardsService) EXPECT() *MockRewardsServiceMockRecorder {
	return m.recorder
}

// GetRewardDetails mocks base method
func (m *MockRewardsService) GetRewardDetails(arg0 context.Context, arg1 string) []*vega.RewardPerAssetDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRewardDetails", arg0, arg1)
	ret0, _ := ret[0].([]*vega.RewardPerAssetDetail)
	return ret0
}

// GetRewardDetails indicates an expected call of GetRewardDetails
func (mr *MockRewardsServiceMockRecorder) GetRewardDetails(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRewardDetails", reflect.TypeOf((*MockRewardsService)(nil).GetRewardDetails), arg0, arg1)
}

// GetRewardDetailsForAsset mocks base method
func (m *MockRewardsService) GetRewardDetailsForAsset(arg0 context.Context, arg1, arg2 string) *vega.RewardPerAssetDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRewardDetailsForAsset", arg0, arg1, arg2)
	ret0, _ := ret[0].(*vega.RewardPerAssetDetail)
	return ret0
}

// GetRewardDetailsForAsset indicates an expected call of GetRewardDetailsForAsset
func (mr *MockRewardsServiceMockRecorder) GetRewardDetailsForAsset(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRewardDetailsForAsset", reflect.TypeOf((*MockRewardsService)(nil).GetRewardDetailsForAsset), arg0, arg1, arg2)
}

// ObserveRewardDetails mocks base method
func (m *MockRewardsService) ObserveRewardDetails(arg0 context.Context, arg1 int, arg2, arg3 string) (<-chan vega.RewardDetails, uint64) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObserveRewardDetails", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(<-chan vega.RewardDetails)
	ret1, _ := ret[1].(uint64)
	return ret0, ret1
}

// ObserveRewardDetails indicates an expected call of ObserveRewardDetails
func (mr *MockRewardsServiceMockRecorder) ObserveRewardDetails(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveRewardDetails", reflect.TypeOf((*MockRewardsService)(nil).ObserveRewardDetails), arg0, arg1, arg2, arg3)
}
