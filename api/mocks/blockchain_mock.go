// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/data-node/api (interfaces: Blockchain)

// Package mocks is a generated GoMock package.
package mocks

import (
	api "code.vegaprotocol.io/data-node/proto/api"
	proto "code.vegaprotocol.io/data-node/proto/vega"
	v1 "code.vegaprotocol.io/data-node/proto/vega/commands/v1"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBlockchain is a mock of Blockchain interface
type MockBlockchain struct {
	ctrl     *gomock.Controller
	recorder *MockBlockchainMockRecorder
}

// MockBlockchainMockRecorder is the mock recorder for MockBlockchain
type MockBlockchainMockRecorder struct {
	mock *MockBlockchain
}

// NewMockBlockchain creates a new mock instance
func NewMockBlockchain(ctrl *gomock.Controller) *MockBlockchain {
	mock := &MockBlockchain{ctrl: ctrl}
	mock.recorder = &MockBlockchainMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlockchain) EXPECT() *MockBlockchainMockRecorder {
	return m.recorder
}

// SubmitTransaction mocks base method
func (m *MockBlockchain) SubmitTransaction(arg0 context.Context, arg1 *proto.SignedBundle, arg2 api.SubmitTransactionRequest_Type) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitTransaction", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SubmitTransaction indicates an expected call of SubmitTransaction
func (mr *MockBlockchainMockRecorder) SubmitTransaction(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitTransaction", reflect.TypeOf((*MockBlockchain)(nil).SubmitTransaction), arg0, arg1, arg2)
}

// SubmitTransactionV2 mocks base method
func (m *MockBlockchain) SubmitTransactionV2(arg0 context.Context, arg1 *v1.Transaction, arg2 api.SubmitTransactionV2Request_Type) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitTransactionV2", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SubmitTransactionV2 indicates an expected call of SubmitTransactionV2
func (mr *MockBlockchainMockRecorder) SubmitTransactionV2(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitTransactionV2", reflect.TypeOf((*MockBlockchain)(nil).SubmitTransactionV2), arg0, arg1, arg2)
}
