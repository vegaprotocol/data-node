package sqlstore

import (
	"context"

	"code.vegaprotocol.io/data-node/entities"
	"github.com/georgysavva/scany/pgxscan"
)

type Accounts struct {
	*SqlStore
}

func NewAccounts(sqlStore *SqlStore) *Accounts {
	a := &Accounts{
		SqlStore: sqlStore,
	}
	return a
}

// Updates the account supplied with autogenerated ID
func (as *Accounts) Add(a *entities.Account) error {
	ctx := context.Background()
	err := as.pool.QueryRow(ctx,
		`INSERT INTO accounts(party_id, asset_id, market_id, type, vega_time)
		 VALUES ($1, $2, $3, $4, $5)
		 RETURNING id`,
		a.PartyID,
		a.AssetID,
		a.MarketID,
		a.Type,
		a.VegaTime).Scan(&a.ID)
	return err
}

func (as *Accounts) GetByID(id int64) (entities.Account, error) {
	a := entities.Account{}
	ctx := context.Background()
	err := pgxscan.Get(ctx, as.pool, &a,
		`SELECT id, party_id, asset_id, market_id, type, vega_time
		 FROM accounts WHERE id=$1`,
		id)
	return a, err
}

func (as *Accounts) GetAll() ([]entities.Account, error) {
	ctx := context.Background()
	accounts := []entities.Account{}
	err := pgxscan.Select(ctx, as.pool, &accounts, `
		SELECT id, party_id, asset_id, market_id, type, vega_time
		FROM accounts`)
	return accounts, err
}
