---
schema: schema.graphql
exec:
  filename: generated.go
model:
  filename: models.go

models:
  Order:
    model: code.vegaprotocol.io/protos/vega.Order
  Trade:
    model: code.vegaprotocol.io/protos/vega.Trade
  PriceLevel:
    model: code.vegaprotocol.io/protos/vega.PriceLevel
  MarketDepth:
    model: code.vegaprotocol.io/protos/vega.MarketDepth
  MarketDepthUpdate:
    model: code.vegaprotocol.io/protos/vega.MarketDepthUpdate
  Candle:
    model: code.vegaprotocol.io/protos/vega.Candle
  Position:
    model: code.vegaprotocol.io/protos/vega.Position
  Account:
    model: code.vegaprotocol.io/protos/vega.Account
  MarketData:
    model: code.vegaprotocol.io/protos/vega.MarketData
  MarginLevels:
    model: code.vegaprotocol.io/protos/vega.MarginLevels
  NodeSignature:
    model: code.vegaprotocol.io/protos/vega/commands/v1.NodeSignature
  ProposalEvent:
    model: code.vegaprotocol.io/protos/vega.Proposal
  RiskFactor:
    model: code.vegaprotocol.io/protos/vega.RiskFactor
  NetworkParameter:
    model: code.vegaprotocol.io/protos/vega.NetworkParameter
  LiquidityOrder:
    model: code.vegaprotocol.io/protos/vega.LiquidityOrder
  LiquidityProvision:
    model: code.vegaprotocol.io/protos/vega.LiquidityProvision
  LiquidityOrderReference:
    model: code.vegaprotocol.io/protos/vega.LiquidityOrderReference
  Future:
    model: code.vegaprotocol.io/protos/vega.Future
  TradableInstrument:
    model: code.vegaprotocol.io/protos/vega.TradableInstrument
  SimpleRiskModel:
    model: code.vegaprotocol.io/protos/vega.SimpleRiskModel
  SimpleRiskModelParams:
    model: code.vegaprotocol.io/protos/vega.SimpleModelParams
  LogNormalRiskModel:
    model: code.vegaprotocol.io/protos/vega.LogNormalRiskModel
  LogNormalModelParams:
    model: code.vegaprotocol.io/protos/vega.LogNormalModelParams
  Instrument:
    model: code.vegaprotocol.io/protos/vega.Instrument
  InstrumentMetadata:
    model: code.vegaprotocol.io/protos/vega.InstrumentMetadata
  Market:
    model: code.vegaprotocol.io/protos/vega.Market
    fields:
      orders:
        resolver: true
      trades:
        resolver: true
      depth:
        resolver: true
      data:
        resolver: true
      candles:
        resolver: true
      accounts:
        resolver: true
      orderByReference:
        resolver: true
      liquidityProvisions:
        resolver: true
  Party:
    model: code.vegaprotocol.io/protos/vega.Party
    fields:
      orders:
        resolver: true
      trades:
        resolver: true
      positions:
        resolver: true
      accounts:
        resolver: true
      margins:
        resolver: true
      delegations:
        resolver: true
  Proposal:
    model: code.vegaprotocol.io/protos/vega.GovernanceData
    fields:
      votes:
        resolver: true
  ProposalTerms:
    model: code.vegaprotocol.io/protos/vega.ProposalTerms
  NewMarket:
    model: code.vegaprotocol.io/protos/vega.NewMarket
  NewMarketCommitment:
    model: code.vegaprotocol.io/protos/vega.NewMarketCommitment
  NewAsset:
    model: code.vegaprotocol.io/protos/vega.NewAsset
  UpdateMarket:
    model: code.vegaprotocol.io/protos/vega.UpdateMarket
  UpdateNetworkParameter:
    model: code.vegaprotocol.io/protos/vega.UpdateNetworkParameter
  InstrumentConfiguration:
    model: code.vegaprotocol.io/protos/vega.InstrumentConfiguration
  FutureProduct:
    model: code.vegaprotocol.io/protos/vega.FutureProduct
  Asset:
    model: code.vegaprotocol.io/protos/vega.Asset
    fields:
      infrastructureFeeAccount:
        resolver: true
  Deposit:
    model: code.vegaprotocol.io/protos/vega.Deposit
  Withdrawal:
    model: code.vegaprotocol.io/protos/vega.Withdrawal
    fields:
      txHash:
        resolver: true
  PeggedOrder:
    model: code.vegaprotocol.io/protos/vega.PeggedOrder
  OracleSpecToFutureBinding:
    model: code.vegaprotocol.io/protos/vega.OracleSpecToFutureBinding
  OracleSpecConfiguration:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.OracleSpecConfiguration
  OracleSpec:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.OracleSpec
  Filter:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.Filter
  PropertyKey:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.PropertyKey
  Condition:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.Condition
  OracleData:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.OracleData
  Property:
    model: code.vegaprotocol.io/protos/vega/oracles/v1.Property
  AuctionEvent:
    model: code.vegaprotocol.io/protos/vega/events/v1.AuctionEvent
  FeeFactors:
    model: code.vegaprotocol.io/protos/vega.FeeFactors
  Fees:
    model: code.vegaprotocol.io/protos/vega.Fees
  ScalingFactors:
    model: code.vegaprotocol.io/protos/vega.ScalingFactors
  MarginCalculator:
    model: code.vegaprotocol.io/protos/vega.MarginCalculator
  Vote:
    model: code.vegaprotocol.io/protos/vega.Vote
  MarketTimestamps:
    model: code.vegaprotocol.io/protos/vega.MarketTimestamps
  NodeData:
    model: code.vegaprotocol.io/protos/vega.NodeData
  EpochData:
    model: code.vegaprotocol.io/protos/vega.EpochData
  Delegation:
    model: code.vegaprotocol.io/protos/vega.Delegation
  Node:
    model: code.vegaprotocol.io/protos/vega.Node
    fields:
      delegations:
        resolver: true
  Epoch:
    model: code.vegaprotocol.io/protos/vega.Epoch
  EpochTimestamps:
    model: code.vegaprotocol.io/protos/vega.EpochTimestamps
  RewardPerAssetDetail:
    model: code.vegaprotocol.io/protos/vega.RewardPerAssetDetail
  Reward:
    model: code.vegaprotocol.io/protos/vega.RewardDetails
  StakeLinking:
    model: code.vegaprotocol.io/protos/vega/events/v1.StakeLinking
  PartyStake:
    model: code.vegaprotocol.io/protos/data-node/api/v1.PartyStakeResponse
  KeyRotation:
    model: code.vegaprotocol.io/protos/data-node/api/v1.KeyRotation
  Statistics:
    model: code.vegaprotocol.io/protos/vega/api/v1.Statistics
