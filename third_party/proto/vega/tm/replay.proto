syntax = "proto3";

package tm;
option go_package = "code.vegaprotocol.io/data-node/tm";

message TmEvent {
  oneof action {
    RequestInitChain req_init_chain = 1;
    ResponseInitChain res_init_chain = 2;
    RequestDeliverTx req_deliver_tx = 3;
    ResponseDeliverTx res_deliver_tx = 4;
    RequestBeginBlock req_begin_block = 5;
    ResponseBeginBlock res_begin_block = 6;
  }
}

message RequestInitChain {
  int64 time = 1;
  string chain_id = 2;
  ConsensusParams consensus_params = 3;
  repeated ValidatorUpdate validators = 4;
  bytes app_state_bytes = 5;
  int64 initial_height = 6;
}

message RequestBeginBlock {
  bytes hash = 1;
  Header header = 2;
  LastCommitInfo last_commit_info = 3;
  repeated Evidence byzantine_validators = 4;
}

message RequestDeliverTx {
  bytes tx = 1;
}

message ResponseInitChain {
  ConsensusParams consensus_params = 1;
  repeated ValidatorUpdate validators = 2;
  bytes app_hash = 3;
}

message ResponseBeginBlock {
  repeated Event events = 1;
}

message ResponseDeliverTx {
  uint32 code = 1;
  bytes data = 2;
  string log = 3;  // nondeterministic
  string info = 4;  // nondeterministic
  int64 gas_wanted = 5;
  int64 gas_used = 6;
  repeated Event events = 7;
  string codespace = 8;
}

message Event {
  string type = 1;
  repeated EventAttribute attributes = 2;
}

message EventAttribute {
  bytes key = 1;
  bytes value = 2;
  bool index = 3;  // nondeterministic
}

message ValidatorUpdate {
  PublicKey pub_key = 1;
  int64 power = 2;
}

message ConsensusParams {
  BlockParams block = 1;
  EvidenceParams evidence = 2;
  ValidatorParams validator = 3;
  VersionParams version = 4;
}

message BlockParams {
  int64 max_bytes = 1;
  int64 max_gas = 2;
}

message Evidence {
  EvidenceType type = 1;
  Validator validator = 2;
  int64 height = 3;
  int64 time = 4;
  int64 total_voting_power = 5;
}

enum EvidenceType {
  UNKNOWN               = 0;
  DUPLICATE_VOTE        = 1;
  LIGHT_CLIENT_ATTACK   = 2;
}

message Validator {
  bytes address = 1;
  int64 power = 3;
}

message LastCommitInfo {
  int32 round = 1;
  repeated VoteInfo votes = 2;
}

message VoteInfo {
  Validator validator = 1;
  bool signed_last_block = 2;
}

message EvidenceParams {
  int64 max_age_num_blocks = 1;
  int64 max_age_duration = 2;
  uint32 max_num = 3;
}

message ValidatorParams {
  repeated string pub_key_types = 1;
}

message VersionParams {
  uint64 app_version = 1;
}

message Header {
  string chain_id = 1;
  int64 height = 2;
  int64 time = 3;
}

message PublicKey {
  oneof sum {
    bytes ed25519 = 1;
  }
}